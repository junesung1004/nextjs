
export default function AboutPage(){
    return(
        <h1>about page입니다.</h1>
    )
}

/*
폴더링 구조
next.js는 파일 기반의 라우팅을 기본값으로 제공한다. page 디렉터리 안에 파일을 위치시키면
자동으로 라우트가 생성되는 방식
app폴더안에 생성된 폴더는 경로의 이름이 되며, 폴더내에 있는 page.jsx / index.jsx를 인식한다.

폴더단위로 페이지를 관리하기 때문에 대규모 프로젝트나 관리 면에서 장점이 있다.

페이지의 안에 다른 페이지를 구성하고 싶으면 페이지 안에 다시 폴더를 생성하면 된다.

폴더와 파일명을 기반으로 url 경로를 자동으로 생성해서 설정하는 방식을 '스태틱 라우팅' 이라고 한다.
-자동 url 매핑 : app 경로 내부에 있는 파일 및 폴더 구조를 통해 자동으로 url 경로를 생성하므로 
따로 router를 통해서 경로를 설정하지 않아도 된다.
ex) about/page.js 는 자동으로 메인주소/about으로 매핑되면 page.js는 메인 페이지로 생성된다.

-간단하고 직관적 : 파일 시스템을 기반으로 하는 스태틱 라우팅 url구조를 쉽게 파악할 수 있게 하며,
복잡한 라우팅 설정 없이도 효율적으로 페이지를 구성

-유연성 : 페이지를 추가하거나 구조를 변경하고 싶을때ㅔ 단순히 파일이나 폴더를 추가하거나 이름을 변경하면
된다.

-동적 라우팅 지원 : 스태틱 라우팅 외에도, 동적 라우팅을 통해 페이지 관리를 할 수 있다.
파일이나 폴더명에 []를 사용해서 작성한다. 
page/item/[id].js  로 설정하면 [id]는 특정한 값을 받아서 페이지에 출력한다.
page/item/item1, 처럼 id를 받아서 경로를 생성

*/
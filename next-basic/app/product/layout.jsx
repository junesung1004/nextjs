import Link from "next/link";


export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function ProductLayout({ children }) {
  return (
    <>
        <nav>
            <ul>
                <li><Link href='/product/women'>여성옷</Link></li>
                <li><Link href='/product/man'>남성옷</Link></li>
                <li><Link href='/product/chilren'>어린이 옷</Link></li>
            </ul>
        </nav>
        <div>
            {children}
        </div>
    </>
  );
}

/*
nextjs Link 컴포넌트

리액트에서 router-dom에서 사용하는 Link컴포넌트지만 next에서는 next에 내장되어 있는 Link를 사용한다.
그래서 컴포넌트명은 같지만 다른 api이기 때문에 다른 방법을 사용한다.
to 대신 href로 사용하며 경로를 직접 설정한다. (이동하고자 하는 url의 주소 입력)
옛날에는 Link컴포넌트 안에 a태그를 따로 해야 했지만 13버전이후로는 Link 컴포넌트만 사용하면 된다
(자동으로 Link => a태그로 컴파일)

a태그 대신에 Link컴포넌트를 사용하는 이유
가장 큰 이유는 랜더링 방식의 차이 때문이다.

a태그는 ssr(server side rendering) 방식을 채택한다.
페이지를 불러올때마다 안에 있는 모든 내용들을 새로 불러와서 로딩하는 방식이기 때문에 
성능 저하, 상태 손실(페이지를 아예 새로 불러왔기 때문에 기존 페이지의 상태(입력데이터, 스크롤위치, 애니메이션 유무))
모두 초기화

불필요한 데이터를 처리해야 하므로 관리 측면에서도 좋지 않음

Link 컴포넌트
csr(client side rendering) 페이지 전환시 브러우저가 잔체 페이지를 불러오지 않고 요청된 페이지만
비동기적으로 불러와서 랜더링 한다. 속도가 빠르고, 상태 저장의 이점이 있다.

예외
내부가 아닌 외부의 링크를 연결하거나 파일을 다운로드 링크를 생성할때에는 예외적으로 리액트내부에서도
a태그를 사용해야 한다.

*/
